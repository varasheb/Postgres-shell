Create Table:

CREATE TABLE student (
    student_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    date_of_birth DATE,
    email VARCHAR(100)
);

CREATE TABLE course (
    course_id INT PRIMARY KEY,
    course_name VARCHAR(255),
    instructor VARCHAR(255),
    credits INT
);


Insert Data:

INSERT INTO student (student_id, first_name, last_name, date_of_birth, email)
VALUES (1, 'Virat','Koli', '2000-01-15', 'virat@gmail.com');

INSERT INTO course (course_id, course_name, instructor, credits)
VALUES (101, 'Mathematics', 'Dr. Smith', 3);


Update Data:

UPDATE student
SET email = 'koli@gmail.com'
WHERE student_id = 1;


Delete Data:

DELETE FROM course
WHERE course_id = 101;


Select Data (DQL):

SELECT * FROM student;
SELECT * FROM course;



Modify Student Table:

ALTER TABLE student
ADD COLUMN course_id INT,
ADD CONSTRAINT fk_course
FOREIGN KEY (course_id)
REFERENCES course(course_id);



Insert Data with Foreign Key:

INSERT INTO student (student_id, first_name, last_name, date_of_birth, email, course_id)
VALUES (1, 'Virat','Koli', '2000-01-15', 'virat@gmail.com', 101);


INNER JOIN: Returns rows when there is at least one match in both tables.
---->
SELECT student.student_id, student.first_name, student.last_name, course.course_name
FROM student
INNER JOIN course ON student.course_id = course.course_id;


LEFT JOIN (or LEFT OUTER JOIN): Returns all rows from the left table (student), and the matched rows from the right table (course). The result is NULL from the right side if there is no match.
--->
SELECT student.student_id, student.first_name, student.last_name, course.course_name
FROM student
LEFT JOIN course ON student.course_id = course.course_id;


RIGHT JOIN (or RIGHT OUTER JOIN): Returns all rows from the right table (course), and the matched rows from the left table (student). The result is NULL from the left side when there is no match.
-------->
SELECT student.student_id, student.first_name, student.last_name, course.course_name
FROM student
RIGHT JOIN course ON student.course_id = course.course_id;


FULL JOIN (or FULL OUTER JOIN): Returns rows when there is a match in one of the tables. It essentially combines the results of both LEFT JOIN and RIGHT JOIN.
----->
SELECT student.student_id, student.first_name, student.last_name, course.course_name
FROM student
FULL JOIN course ON student.course_id = course.course_id;


CROSS JOIN: Returns the Cartesian product of the two tables, i.e., all possible combinations of rows.
------>
SELECT student.student_id, student.first_name, student.last_name, course.course_name
FROM student
CROSS JOIN course;


